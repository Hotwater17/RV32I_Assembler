mnemonicsList = [
    "LUI",
    "AUIPC",
    "JAL",
    "JALR",
    "BEQ",
    "BNE",
    "BLT",
    "BGE",
    "BLTU",
    "BGEU",
    "LB",
    "LH",
    "LW",
    "LBU",
    "LHU",
    "SB",
    "SH",
    "SW",
    "ADDI",
    "SLTI",
    "SLTIU",
    "XORI",
    "ORI",
    "ANDI",
    "SLLI",
    "SRRI",
    "SRAI",
    "ADD",
    "SUB",
    "SLL",
    "SLT",
    "SLTU",
    "XOR",
    "SRL",
    "SRA",
    "OR",
    "AND",
    "FENCE",
    "ECALL",
    "EBREAK"
]

pseudoInstructionsList = [
    "NOP",
    "LI",
    "MV",
    "NOT",
    "NEG",
    "NEGW",
    "SEXT",
    "SEQZ",
    "SNEZ",
    "SLTZ",
    "SGTZ"
]

RtypeList = [
    "ADD",
    "SUB",
    "SLL",
    "SLT",
    "SLTU",
    "XOR",
    "SRL",
    "SRA",
    "OR",
    "AND"
]

ItypeList = [
    "ADDI",
    "SLTI",
    "SLTIU",
    "XORI",
    "ORI",
    "ANDI",
    "SLLI",
    "SRRI",
    "SRAI"
]

StypeList = [

    "SB",
    "SH",
    "SW"
]

LtypeList = [
    "LB",
    "LH",
    "LW",
    "LBU",
    "LHU"
]

BtypeList = [
    "BEQ",
    "BNE",
    "BLT",
    "BGE",
    "BLTU",
    "BGEU"
]

UtypeList = [
    "LUI",
    "AUIPC"
]

JtypeList = [
    "JAL",
    "JALR"
]

EtypeList = [
    "ECALL",
    "EBREAK"
]

ShiftImmediateList = [
    "SLLI",
    "SRLI",
    "SRAI"
]

def opcodeDictionary(mnemonic):
    opcodes = {

    "LUI":"0110111",
    "AUIPC":"0010111",
    "JAL":"1101111",
    "JALR":"1100111 ",
    "BEQ":"1100011",
    "BNE":"1100011",
    "BLT":"1100011",
    "BGE":"1100011",
    "BLTU":"1100011",
    "BGEU":"1100011",
    "LB":"0000011",
    "LH":"0000011",
    "LW":"0000011",
    "LBU":"0000011",
    "LHU":"0000011",
    "SB":"0100011",
    "SH":"0100011",
    "SW":"0100011",
    "ADDI":"0010011",
    "SLTI":"0010011",
    "SLTIU":"0010011",
    "XORI":"0010011",
    "ORI":"0010011",
    "ANDI":"0010011",
    "SLLI":"0010011",
    "SRRI":"0010011",
    "SRAI":"0010011",
    "ADD":"0110011",
    "SUB":"0110011",
    "SLL":"0110011",
    "SLT":"0110011",
    "SLTU":"0110011",
    "XOR":"0110011",
    "SRL":"0110011",
    "SRA":"0110011",
    "OR":"0110011",
    "AND":"0110011",
    "FENCE":"0001111",
    "ECALL":"1110011",
    "EBREAK":"1110011"
    }
    return opcodes.get(mnemonic);

def extractAuxOpcode(mnemonic):
    negativeList = [
        "SUB",
        "SRA",
        "SRAI"
    ]
    auxOpcode = "";
    if mnemonic in negativeList :
        auxOpcode = "0100000";
    else: auxOpcode = "0000000";

    return auxOpcode;

def extractAluCode(mnemonic):
    aluCodes = {
        "JALR" : "000",
        "BEQ" : "000",
        "BNE" : "001",
        "BLT" : "100",
        "BGE" : "101",
        "BLTU" : "110",
        "BGEU" : "111",
        "LB" : "000",
        "LH" : "001",
        "LW" : "010",
        "LBU" : "100",
        "LHU" : "101",
        "SB" : "000",
        "SH" : "001",
        "SW" : "010",
        "ADDI" : "000",
        "SLTI" : "010",
        "SLTIU" : "011",
        "XORI" : "100",
        "ORI" : "110",
        "ANDI" : "111",
        "SLLI" : "001",
        "SRLI" : "101",
        "SRAI" : "101",
        "ADD" : "000",
        "SUB" : "000",
        "SLL" : "001",
        "SLT" : "010",
        "SLTU" : "011",
        "XOR" : "100",
        "SRL" : "101",
        "SRA" : "101",
        "OR" : "110",
        "AND" : "111",
        "FENCE" : "000",
        "ECALL" : "000",
        "EBREAk" : "000"
    }

    return aluCodes.get(mnemonic);